{"ast":null,"code":"var _jsxFileName = \"/Users/aigerimsuleimenova/Recoil/recoil-todo-list/src/components/Task.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport checkIconSvg from \"./check.svg\";\nimport { Card } from './Card';\nimport { atomFamily, useRecoilCallback, useRecoilState } from 'recoil';\nimport { useRecoilValue } from 'recoil';\nimport { tasksState } from './Tasks';\nexport const TextStyle = css`\n    font-size: 17px;\n    color: ${props => props.theme.text};\n    font-family: inherit;\n`;\nexport const Container = styled(Card)`\n    height: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between\n`;\nconst Check = styled.div`\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    margin-right: 15px;\n    transition: 0.2s all ease-in-out;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background-color: ${props => props.theme.background};\n    cursor: pointer;\n\n    ${props => props.checked && css`\n            background-color: transparent;\n        `}\n`;\nconst CheckIcon = styled.img`\n    transition: 0.1s opacity ease-in-out;\n`;\nconst Delete = styled.button`\nbackground-color: #f44336; /* Red */\nborder: none;\ncolor: white;\npadding: 10px 20px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 16px;\nmargin: 4px 2px;\ncursor: pointer;\nborder-radius: 4px;\n`;\nconst Label = styled.div`\n    position: relative;\n    ${TextStyle}\n`;\nconst Strikethrough = styled.div`\n    position: absolute;\n    top: 50%;\n    left: -3px;\n    right: -3px;\n    height: 2px;\n    background-color: ${props => props.theme.text};\n    border-radius: 2px;\n    transform: scaleX(0);\n    transform-origin: center left;\n    transition: 0.1s all ease-in-out;\n\n    ${props => props.checked && css`\n            transform: scaleX(1);\n        `};\n`;\nexport const taskState = atomFamily({\n  key: 'task',\n  default: {\n    label: '',\n    complete: false\n  }\n});\nexport const Task = ({\n  id\n}) => {\n  const [{\n    complete,\n    label\n  }, setTask] = useRecoilState(taskState(id));\n  const [tasks, setTasks] = useRecoilValue(tasksState);\n  const deleteTask = useRecoilCallback(({\n    snapshot,\n    set\n  }) => async () => {\n    const tasks = await snapshot.getPromise(tasksState);\n    const updatedTasks = tasks.filter((_, index) => index !== id);\n    set(tasksState, updatedTasks);\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    onClick: () => {\n      // Toggle completed\n      setTask({\n        label,\n        complete: !complete\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Check, {\n    checked: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CheckIcon, {\n    src: checkIconSvg,\n    style: {\n      opacity: complete ? 1 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, label, /*#__PURE__*/React.createElement(Strikethrough, {\n    checked: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Delete, {\n    onClick: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Delete\"));\n};","map":{"version":3,"sources":["/Users/aigerimsuleimenova/Recoil/recoil-todo-list/src/components/Task.tsx"],"names":["React","styled","css","Card","atomFamily","useRecoilCallback","useRecoilState","useRecoilValue","tasksState","TextStyle","props","theme","text","Container","Check","div","background","checked","CheckIcon","img","Delete","button","Label","Strikethrough","taskState","key","default","label","complete","Task","id","setTask","tasks","setTasks","deleteTask","snapshot","set","getPromise","updatedTasks","filter","_","index","checkIconSvg","opacity"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, {css} from 'styled-components'\nimport checkIconSvg from './check.svg'\n\nimport {Card} from './Card'\nimport { atomFamily,selector,useRecoilCallback,useRecoilState } from 'recoil'\nimport { atom,useRecoilValue } from 'recoil'\nimport { tasksState } from './Tasks'\n\nexport const TextStyle = css`\n    font-size: 17px;\n    color: ${(props) => props.theme.text};\n    font-family: inherit;\n`\n\nexport const Container = styled(Card)`\n    height: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between\n`\n\nconst Check = styled.div<{checked: boolean}>`\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    margin-right: 15px;\n    transition: 0.2s all ease-in-out;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background-color: ${(props) => props.theme.background};\n    cursor: pointer;\n\n    ${(props) =>\n        props.checked &&\n        css`\n            background-color: transparent;\n        `}\n`\n\nconst CheckIcon = styled.img`\n    transition: 0.1s opacity ease-in-out;\n`\nconst Delete = styled.button`\nbackground-color: #f44336; /* Red */\nborder: none;\ncolor: white;\npadding: 10px 20px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 16px;\nmargin: 4px 2px;\ncursor: pointer;\nborder-radius: 4px;\n`\n\nconst Label = styled.div`\n    position: relative;\n    ${TextStyle}\n`\n\nconst Strikethrough = styled.div<{checked: boolean}>`\n    position: absolute;\n    top: 50%;\n    left: -3px;\n    right: -3px;\n    height: 2px;\n    background-color: ${(props) => props.theme.text};\n    border-radius: 2px;\n    transform: scaleX(0);\n    transform-origin: center left;\n    transition: 0.1s all ease-in-out;\n\n    ${(props) =>\n        props.checked &&\n        css`\n            transform: scaleX(1);\n        `};\n`\nexport const taskState = atomFamily({\n    key: 'task',\n    default: {\n        label: '',\n        complete: false\n    }\n})\n\n\nexport const Task: React.FC<{id: number}> = ({id}) => {\n    const [{complete, label}, setTask] = useRecoilState(taskState(id))\n    const [ tasks, setTasks] = useRecoilValue(tasksState)\n\n\n    const deleteTask = useRecoilCallback(({ snapshot, set }) => async () => {\n        const tasks = await snapshot.getPromise(tasksState);\n        const updatedTasks = tasks.filter((_, index) => index !== id);\n        set(tasksState, updatedTasks);\n    });\n\n\n\n    return (\n        <Container\n            onClick={() => {\n                // Toggle completed\n                setTask({\n                    label,\n                    complete: !complete\n                })\n            }}\n        >\n            <Check checked={complete}>\n                <CheckIcon\n                    src={checkIconSvg}\n                    style={{opacity: complete ? 1 : 0}}\n                />\n            </Check>\n\n\n            <Label>\n                {label}\n                <Strikethrough checked={complete} />\n            </Label>\n            <Delete onClick={deleteTask}>Delete</Delete>\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}