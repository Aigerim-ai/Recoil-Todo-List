{"ast":null,"code":"var _jsxFileName = \"/Users/aigerimsuleimenova/Recoil/recoil-todo-list/src/components/Task.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport checkIconSvg from \"./check.svg\";\nimport { Card } from './Card';\nimport { atomFamily, useRecoilState } from 'recoil';\nexport const TextStyle = css`\n    font-size: 17px;\n    color: ${props => props.theme.text};\n    font-family: inherit;\n`;\nexport const Container = styled(Card)`\n    height: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between\n`;\nconst Check = styled.div`\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    margin-right: 15px;\n    transition: 0.2s all ease-in-out;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background-color: ${props => props.theme.background};\n    cursor: pointer;\n\n    ${props => props.checked && css`\n            background-color: transparent;\n        `}\n`;\nconst CheckIcon = styled.img`\n    transition: 0.1s opacity ease-in-out;\n`;\nconst Delete = styled.button`\nbackground-color: #f44336; /* Red */\nborder: none;\ncolor: white;\npadding: 10px 20px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 16px;\nmargin: 4px 2px;\ncursor: pointer;\nborder-radius: 4px;\n`;\nconst Label = styled.div`\n    position: relative;\n    ${TextStyle}\n`;\nconst Strikethrough = styled.div`\n    position: absolute;\n    top: 50%;\n    left: -3px;\n    right: -3px;\n    height: 2px;\n    background-color: ${props => props.theme.text};\n    border-radius: 2px;\n    transform: scaleX(0);\n    transform-origin: center left;\n    transition: 0.1s all ease-in-out;\n\n    ${props => props.checked && css`\n            transform: scaleX(1);\n        `};\n`;\nexport const taskState = atomFamily({\n  key: 'task',\n  default: {\n    label: '',\n    complete: false\n  }\n});\nexport const Task = ({\n  id\n}) => {\n  const [{\n    complete,\n    label\n  }, setTask] = useRecoilState(taskState(id));\n  return /*#__PURE__*/React.createElement(Container, {\n    onClick: () => {\n      // Toggle completed\n      setTask({\n        label,\n        complete: !complete\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Check, {\n    checked: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CheckIcon, {\n    src: checkIconSvg,\n    style: {\n      opacity: complete ? 1 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, label, /*#__PURE__*/React.createElement(Strikethrough, {\n    checked: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Delete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Delete\"));\n};","map":{"version":3,"sources":["/Users/aigerimsuleimenova/Recoil/recoil-todo-list/src/components/Task.tsx"],"names":["React","styled","css","Card","atomFamily","useRecoilState","TextStyle","props","theme","text","Container","Check","div","background","checked","CheckIcon","img","Delete","button","Label","Strikethrough","taskState","key","default","label","complete","Task","id","setTask","checkIconSvg","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;;AAGA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAASC,UAAT,EAAoBC,cAApB,QAA0C,QAA1C;AAEA,OAAO,MAAMC,SAAS,GAAGJ,GAAI;;aAEfK,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,IAAK;;CAFlC;AAMP,OAAO,MAAMC,SAAS,GAAGT,MAAM,CAACE,IAAD,CAAO;;;;;;;CAA/B;AASP,MAAMQ,KAAK,GAAGV,MAAM,CAACW,GAAwB;;;;;;;;;wBASpBL,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYK,UAAW;;;MAGnDN,KAAD,IACEA,KAAK,CAACO,OAAN,IACAZ,GAAI;;SAEF;CAhBV;AAmBA,MAAMa,SAAS,GAAGd,MAAM,CAACe,GAAI;;CAA7B;AAGA,MAAMC,MAAM,GAAGhB,MAAM,CAACiB,MAAO;;;;;;;;;;;;CAA7B;AAcA,MAAMC,KAAK,GAAGlB,MAAM,CAACW,GAAI;;MAEnBN,SAAU;CAFhB;AAKA,MAAMc,aAAa,GAAGnB,MAAM,CAACW,GAAwB;;;;;;wBAM5BL,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,IAAK;;;;;;MAM7CF,KAAD,IACEA,KAAK,CAACO,OAAN,IACAZ,GAAI;;SAEF;CAhBV;AAkBA,OAAO,MAAMmB,SAAS,GAAGjB,UAAU,CAAC;AAChCkB,EAAAA,GAAG,EAAE,MAD2B;AAEhCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL;AAFuB,CAAD,CAA5B;AASP,OAAO,MAAMC,IAA4B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AAClD,QAAM,CAAC;AAACF,IAAAA,QAAD;AAAWD,IAAAA;AAAX,GAAD,EAAoBI,OAApB,IAA+BvB,cAAc,CAACgB,SAAS,CAACM,EAAD,CAAV,CAAnD;AAEA,sBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACX;AACAC,MAAAA,OAAO,CAAC;AACJJ,QAAAA,KADI;AAEJC,QAAAA,QAAQ,EAAE,CAACA;AAFP,OAAD,CAAP;AAIH,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,GAAG,EAAEI,YADT;AAEI,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAEL,QAAQ,GAAG,CAAH,GAAO;AAAzB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,eAiBI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KADL,eAEI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAjBJ,eAqBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CADJ;AAyBH,CA5BM","sourcesContent":["import React from 'react'\nimport styled, {css} from 'styled-components'\nimport checkIconSvg from './check.svg'\n\nimport {Card} from './Card'\nimport { atomFamily,useRecoilState } from 'recoil'\n\nexport const TextStyle = css`\n    font-size: 17px;\n    color: ${(props) => props.theme.text};\n    font-family: inherit;\n`\n\nexport const Container = styled(Card)`\n    height: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between\n`\n\nconst Check = styled.div<{checked: boolean}>`\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    margin-right: 15px;\n    transition: 0.2s all ease-in-out;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background-color: ${(props) => props.theme.background};\n    cursor: pointer;\n\n    ${(props) =>\n        props.checked &&\n        css`\n            background-color: transparent;\n        `}\n`\n\nconst CheckIcon = styled.img`\n    transition: 0.1s opacity ease-in-out;\n`\nconst Delete = styled.button`\nbackground-color: #f44336; /* Red */\nborder: none;\ncolor: white;\npadding: 10px 20px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 16px;\nmargin: 4px 2px;\ncursor: pointer;\nborder-radius: 4px;\n`\n\nconst Label = styled.div`\n    position: relative;\n    ${TextStyle}\n`\n\nconst Strikethrough = styled.div<{checked: boolean}>`\n    position: absolute;\n    top: 50%;\n    left: -3px;\n    right: -3px;\n    height: 2px;\n    background-color: ${(props) => props.theme.text};\n    border-radius: 2px;\n    transform: scaleX(0);\n    transform-origin: center left;\n    transition: 0.1s all ease-in-out;\n\n    ${(props) =>\n        props.checked &&\n        css`\n            transform: scaleX(1);\n        `};\n`\nexport const taskState = atomFamily({\n    key: 'task',\n    default: {\n        label: '',\n        complete: false\n    }\n})\n\n\nexport const Task: React.FC<{id: number}> = ({id}) => {\n    const [{complete, label}, setTask] = useRecoilState(taskState(id))\n\n    return (\n        <Container\n            onClick={() => {\n                // Toggle completed\n                setTask({\n                    label,\n                    complete: !complete\n                })\n            }}\n        >\n            <Check checked={complete}>\n                <CheckIcon\n                    src={checkIconSvg}\n                    style={{opacity: complete ? 1 : 0}}\n                />\n            </Check>\n\n\n            <Label>\n                {label}\n                <Strikethrough checked={complete} />\n            </Label>\n            <Delete >Delete</Delete>\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}